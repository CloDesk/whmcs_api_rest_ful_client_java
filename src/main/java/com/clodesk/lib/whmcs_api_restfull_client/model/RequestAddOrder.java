/*
 * WHMCS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.clodesk.lib.whmcs_api_restfull_client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * RequestAddOrder
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-12T15:17:02.217Z")
public class RequestAddOrder {
  @JsonProperty("clientid")
  private Long clientid = null;

  @JsonProperty("paymentmethod")
  private String paymentmethod = null;

  @JsonProperty("pid")
  private List<Integer> pid = null;

  @JsonProperty("domain")
  private List<String> domain = null;

  @JsonProperty("billingcycle")
  private List<String> billingcycle = null;

  @JsonProperty("domaintype")
  private List<String> domaintype = null;

  @JsonProperty("regperiod")
  private List<Integer> regperiod = null;

  @JsonProperty("eppcode")
  private List<String> eppcode = null;

  @JsonProperty("nameserver1")
  private String nameserver1 = null;

  @JsonProperty("nameserver2")
  private String nameserver2 = null;

  @JsonProperty("nameserver3")
  private String nameserver3 = null;

  @JsonProperty("nameserver4")
  private String nameserver4 = null;

  @JsonProperty("nameserver5")
  private String nameserver5 = null;

  @JsonProperty("customfields")
  private List<String> customfields = null;

  @JsonProperty("configoptions")
  private List<String> configoptions = null;

  @JsonProperty("priceoverride")
  private List<String> priceoverride = null;

  @JsonProperty("promocode")
  private String promocode = null;

  @JsonProperty("promooverride")
  private Boolean promooverride = null;

  @JsonProperty("affid")
  private Integer affid = null;

  @JsonProperty("noinvoice")
  private Boolean noinvoice = null;

  @JsonProperty("noinvoiceemail")
  private Boolean noinvoiceemail = null;

  @JsonProperty("noemail")
  private Boolean noemail = null;

  @JsonProperty("addons")
  private List<String> addons = null;

  @JsonProperty("hostname")
  private List<String> hostname = null;

  @JsonProperty("ns1prefix")
  private List<String> ns1prefix = null;

  @JsonProperty("ns2prefix")
  private List<String> ns2prefix = null;

  @JsonProperty("rootpw")
  private List<String> rootpw = null;

  public RequestAddOrder clientid(Long clientid) {
    this.clientid = clientid;
    return this;
  }

   /**
   * Get clientid
   * @return clientid
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getClientid() {
    return clientid;
  }

  public void setClientid(Long clientid) {
    this.clientid = clientid;
  }

  public RequestAddOrder paymentmethod(String paymentmethod) {
    this.paymentmethod = paymentmethod;
    return this;
  }

   /**
   * The payment method for the order in the system format. eg.,mailin
   * @return paymentmethod
  **/
  @ApiModelProperty(required = true, value = "The payment method for the order in the system format. eg.,mailin")
  public String getPaymentmethod() {
    return paymentmethod;
  }

  public void setPaymentmethod(String paymentmethod) {
    this.paymentmethod = paymentmethod;
  }

  public RequestAddOrder pid(List<Integer> pid) {
    this.pid = pid;
    return this;
  }

  public RequestAddOrder addPidItem(Integer pidItem) {
    if (this.pid == null) {
      this.pid = new ArrayList<Integer>();
    }
    this.pid.add(pidItem);
    return this;
  }

   /**
   * The array of product ids to add the order for
   * @return pid
  **/
  @ApiModelProperty(value = "The array of product ids to add the order for")
  public List<Integer> getPid() {
    return pid;
  }

  public void setPid(List<Integer> pid) {
    this.pid = pid;
  }

  public RequestAddOrder domain(List<String> domain) {
    this.domain = domain;
    return this;
  }

  public RequestAddOrder addDomainItem(String domainItem) {
    if (this.domain == null) {
      this.domain = new ArrayList<String>();
    }
    this.domain.add(domainItem);
    return this;
  }

   /**
   * The array of domain names associated with the products/domains
   * @return domain
  **/
  @ApiModelProperty(value = "The array of domain names associated with the products/domains")
  public List<String> getDomain() {
    return domain;
  }

  public void setDomain(List<String> domain) {
    this.domain = domain;
  }

  public RequestAddOrder billingcycle(List<String> billingcycle) {
    this.billingcycle = billingcycle;
    return this;
  }

  public RequestAddOrder addBillingcycleItem(String billingcycleItem) {
    if (this.billingcycle == null) {
      this.billingcycle = new ArrayList<String>();
    }
    this.billingcycle.add(billingcycleItem);
    return this;
  }

   /**
   * The array of billing cycles for the products
   * @return billingcycle
  **/
  @ApiModelProperty(value = "The array of billing cycles for the products")
  public List<String> getBillingcycle() {
    return billingcycle;
  }

  public void setBillingcycle(List<String> billingcycle) {
    this.billingcycle = billingcycle;
  }

  public RequestAddOrder domaintype(List<String> domaintype) {
    this.domaintype = domaintype;
    return this;
  }

  public RequestAddOrder addDomaintypeItem(String domaintypeItem) {
    if (this.domaintype == null) {
      this.domaintype = new ArrayList<String>();
    }
    this.domaintype.add(domaintypeItem);
    return this;
  }

   /**
   * For domain registrations, an array of register or transfer values
   * @return domaintype
  **/
  @ApiModelProperty(value = "For domain registrations, an array of register or transfer values")
  public List<String> getDomaintype() {
    return domaintype;
  }

  public void setDomaintype(List<String> domaintype) {
    this.domaintype = domaintype;
  }

  public RequestAddOrder regperiod(List<Integer> regperiod) {
    this.regperiod = regperiod;
    return this;
  }

  public RequestAddOrder addRegperiodItem(Integer regperiodItem) {
    if (this.regperiod == null) {
      this.regperiod = new ArrayList<Integer>();
    }
    this.regperiod.add(regperiodItem);
    return this;
  }

   /**
   * For domain registrations, the registration periods for the domains in the order
   * @return regperiod
  **/
  @ApiModelProperty(value = "For domain registrations, the registration periods for the domains in the order")
  public List<Integer> getRegperiod() {
    return regperiod;
  }

  public void setRegperiod(List<Integer> regperiod) {
    this.regperiod = regperiod;
  }

  public RequestAddOrder eppcode(List<String> eppcode) {
    this.eppcode = eppcode;
    return this;
  }

  public RequestAddOrder addEppcodeItem(String eppcodeItem) {
    if (this.eppcode == null) {
      this.eppcode = new ArrayList<String>();
    }
    this.eppcode.add(eppcodeItem);
    return this;
  }

   /**
   * For domain transfers. The epp codes for the domains being transferred in the order
   * @return eppcode
  **/
  @ApiModelProperty(value = "For domain transfers. The epp codes for the domains being transferred in the order")
  public List<String> getEppcode() {
    return eppcode;
  }

  public void setEppcode(List<String> eppcode) {
    this.eppcode = eppcode;
  }

  public RequestAddOrder nameserver1(String nameserver1) {
    this.nameserver1 = nameserver1;
    return this;
  }

   /**
   * The first nameserver to apply to all domains in the order
   * @return nameserver1
  **/
  @ApiModelProperty(value = "The first nameserver to apply to all domains in the order")
  public String getNameserver1() {
    return nameserver1;
  }

  public void setNameserver1(String nameserver1) {
    this.nameserver1 = nameserver1;
  }

  public RequestAddOrder nameserver2(String nameserver2) {
    this.nameserver2 = nameserver2;
    return this;
  }

   /**
   * The second nameserver to apply to all domains in the order
   * @return nameserver2
  **/
  @ApiModelProperty(value = "The second nameserver to apply to all domains in the order")
  public String getNameserver2() {
    return nameserver2;
  }

  public void setNameserver2(String nameserver2) {
    this.nameserver2 = nameserver2;
  }

  public RequestAddOrder nameserver3(String nameserver3) {
    this.nameserver3 = nameserver3;
    return this;
  }

   /**
   * The third nameserver to apply to all domains in the order
   * @return nameserver3
  **/
  @ApiModelProperty(value = "The third nameserver to apply to all domains in the order")
  public String getNameserver3() {
    return nameserver3;
  }

  public void setNameserver3(String nameserver3) {
    this.nameserver3 = nameserver3;
  }

  public RequestAddOrder nameserver4(String nameserver4) {
    this.nameserver4 = nameserver4;
    return this;
  }

   /**
   * The fourth nameserver to apply to all domains in the order
   * @return nameserver4
  **/
  @ApiModelProperty(value = "The fourth nameserver to apply to all domains in the order")
  public String getNameserver4() {
    return nameserver4;
  }

  public void setNameserver4(String nameserver4) {
    this.nameserver4 = nameserver4;
  }

  public RequestAddOrder nameserver5(String nameserver5) {
    this.nameserver5 = nameserver5;
    return this;
  }

   /**
   * The fifth nameserver to apply to all domains in the order
   * @return nameserver5
  **/
  @ApiModelProperty(value = "The fifth nameserver to apply to all domains in the order")
  public String getNameserver5() {
    return nameserver5;
  }

  public void setNameserver5(String nameserver5) {
    this.nameserver5 = nameserver5;
  }

  public RequestAddOrder customfields(List<String> customfields) {
    this.customfields = customfields;
    return this;
  }

  public RequestAddOrder addCustomfieldsItem(String customfieldsItem) {
    if (this.customfields == null) {
      this.customfields = new ArrayList<String>();
    }
    this.customfields.add(customfieldsItem);
    return this;
  }

   /**
   * The array of domain names associated with the products/domains
   * @return customfields
  **/
  @ApiModelProperty(value = "The array of domain names associated with the products/domains")
  public List<String> getCustomfields() {
    return customfields;
  }

  public void setCustomfields(List<String> customfields) {
    this.customfields = customfields;
  }

  public RequestAddOrder configoptions(List<String> configoptions) {
    this.configoptions = configoptions;
    return this;
  }

  public RequestAddOrder addConfigoptionsItem(String configoptionsItem) {
    if (this.configoptions == null) {
      this.configoptions = new ArrayList<String>();
    }
    this.configoptions.add(configoptionsItem);
    return this;
  }

   /**
   * The array of domain names associated with the products/domains
   * @return configoptions
  **/
  @ApiModelProperty(value = "The array of domain names associated with the products/domains")
  public List<String> getConfigoptions() {
    return configoptions;
  }

  public void setConfigoptions(List<String> configoptions) {
    this.configoptions = configoptions;
  }

  public RequestAddOrder priceoverride(List<String> priceoverride) {
    this.priceoverride = priceoverride;
    return this;
  }

  public RequestAddOrder addPriceoverrideItem(String priceoverrideItem) {
    if (this.priceoverride == null) {
      this.priceoverride = new ArrayList<String>();
    }
    this.priceoverride.add(priceoverrideItem);
    return this;
  }

   /**
   * The array of domain names associated with the products/domains
   * @return priceoverride
  **/
  @ApiModelProperty(value = "The array of domain names associated with the products/domains")
  public List<String> getPriceoverride() {
    return priceoverride;
  }

  public void setPriceoverride(List<String> priceoverride) {
    this.priceoverride = priceoverride;
  }

  public RequestAddOrder promocode(String promocode) {
    this.promocode = promocode;
    return this;
  }

   /**
   * The promotion code to apply to the order
   * @return promocode
  **/
  @ApiModelProperty(value = "The promotion code to apply to the order")
  public String getPromocode() {
    return promocode;
  }

  public void setPromocode(String promocode) {
    this.promocode = promocode;
  }

  public RequestAddOrder promooverride(Boolean promooverride) {
    this.promooverride = promooverride;
    return this;
  }

   /**
   * Should the promotion apply to the order even without matching promotional products
   * @return promooverride
  **/
  @ApiModelProperty(value = "Should the promotion apply to the order even without matching promotional products")
  public Boolean isPromooverride() {
    return promooverride;
  }

  public void setPromooverride(Boolean promooverride) {
    this.promooverride = promooverride;
  }

  public RequestAddOrder affid(Integer affid) {
    this.affid = affid;
    return this;
  }

   /**
   * The affiliate id to associate with the order
   * @return affid
  **/
  @ApiModelProperty(value = "The affiliate id to associate with the order")
  public Integer getAffid() {
    return affid;
  }

  public void setAffid(Integer affid) {
    this.affid = affid;
  }

  public RequestAddOrder noinvoice(Boolean noinvoice) {
    this.noinvoice = noinvoice;
    return this;
  }

   /**
   * Set to true to suppress the invoice generating for the whole order
   * @return noinvoice
  **/
  @ApiModelProperty(value = "Set to true to suppress the invoice generating for the whole order")
  public Boolean isNoinvoice() {
    return noinvoice;
  }

  public void setNoinvoice(Boolean noinvoice) {
    this.noinvoice = noinvoice;
  }

  public RequestAddOrder noinvoiceemail(Boolean noinvoiceemail) {
    this.noinvoiceemail = noinvoiceemail;
    return this;
  }

   /**
   * Set to try to suppress the Invoice Created email being sent for the order
   * @return noinvoiceemail
  **/
  @ApiModelProperty(value = "Set to try to suppress the Invoice Created email being sent for the order")
  public Boolean isNoinvoiceemail() {
    return noinvoiceemail;
  }

  public void setNoinvoiceemail(Boolean noinvoiceemail) {
    this.noinvoiceemail = noinvoiceemail;
  }

  public RequestAddOrder noemail(Boolean noemail) {
    this.noemail = noemail;
    return this;
  }

   /**
   * Set to true to suppress the Order Confirmation email being sent
   * @return noemail
  **/
  @ApiModelProperty(value = "Set to true to suppress the Order Confirmation email being sent")
  public Boolean isNoemail() {
    return noemail;
  }

  public void setNoemail(Boolean noemail) {
    this.noemail = noemail;
  }

  public RequestAddOrder addons(List<String> addons) {
    this.addons = addons;
    return this;
  }

  public RequestAddOrder addAddonsItem(String addonsItem) {
    if (this.addons == null) {
      this.addons = new ArrayList<String>();
    }
    this.addons.add(addonsItem);
    return this;
  }

   /**
   * A comma separated list of addons to create on order with the products
   * @return addons
  **/
  @ApiModelProperty(value = "A comma separated list of addons to create on order with the products")
  public List<String> getAddons() {
    return addons;
  }

  public void setAddons(List<String> addons) {
    this.addons = addons;
  }

  public RequestAddOrder hostname(List<String> hostname) {
    this.hostname = hostname;
    return this;
  }

  public RequestAddOrder addHostnameItem(String hostnameItem) {
    if (this.hostname == null) {
      this.hostname = new ArrayList<String>();
    }
    this.hostname.add(hostnameItem);
    return this;
  }

   /**
   * The hostname of the server for VPS/Dedicated Server orders
   * @return hostname
  **/
  @ApiModelProperty(value = "The hostname of the server for VPS/Dedicated Server orders")
  public List<String> getHostname() {
    return hostname;
  }

  public void setHostname(List<String> hostname) {
    this.hostname = hostname;
  }

  public RequestAddOrder ns1prefix(List<String> ns1prefix) {
    this.ns1prefix = ns1prefix;
    return this;
  }

  public RequestAddOrder addNs1prefixItem(String ns1prefixItem) {
    if (this.ns1prefix == null) {
      this.ns1prefix = new ArrayList<String>();
    }
    this.ns1prefix.add(ns1prefixItem);
    return this;
  }

   /**
   * The first nameserver prefix for the VPS/Dedicated server. Eg. ns1 in ns1.hostname.com
   * @return ns1prefix
  **/
  @ApiModelProperty(value = "The first nameserver prefix for the VPS/Dedicated server. Eg. ns1 in ns1.hostname.com")
  public List<String> getNs1prefix() {
    return ns1prefix;
  }

  public void setNs1prefix(List<String> ns1prefix) {
    this.ns1prefix = ns1prefix;
  }

  public RequestAddOrder ns2prefix(List<String> ns2prefix) {
    this.ns2prefix = ns2prefix;
    return this;
  }

  public RequestAddOrder addNs2prefixItem(String ns2prefixItem) {
    if (this.ns2prefix == null) {
      this.ns2prefix = new ArrayList<String>();
    }
    this.ns2prefix.add(ns2prefixItem);
    return this;
  }

   /**
   * The second nameserver prefix for the VPS/Dedicated server. Eg. ns2 in ns2.hostname.com
   * @return ns2prefix
  **/
  @ApiModelProperty(value = "The second nameserver prefix for the VPS/Dedicated server. Eg. ns2 in ns2.hostname.com")
  public List<String> getNs2prefix() {
    return ns2prefix;
  }

  public void setNs2prefix(List<String> ns2prefix) {
    this.ns2prefix = ns2prefix;
  }

  public RequestAddOrder rootpw(List<String> rootpw) {
    this.rootpw = rootpw;
    return this;
  }

  public RequestAddOrder addRootpwItem(String rootpwItem) {
    if (this.rootpw == null) {
      this.rootpw = new ArrayList<String>();
    }
    this.rootpw.add(rootpwItem);
    return this;
  }

   /**
   * The second nameserver prefix for the VPS/Dedicated server. Eg. ns2 in ns2.hostname.com
   * @return rootpw
  **/
  @ApiModelProperty(value = "The second nameserver prefix for the VPS/Dedicated server. Eg. ns2 in ns2.hostname.com")
  public List<String> getRootpw() {
    return rootpw;
  }

  public void setRootpw(List<String> rootpw) {
    this.rootpw = rootpw;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestAddOrder requestAddOrder = (RequestAddOrder) o;
    return Objects.equals(this.clientid, requestAddOrder.clientid) &&
        Objects.equals(this.paymentmethod, requestAddOrder.paymentmethod) &&
        Objects.equals(this.pid, requestAddOrder.pid) &&
        Objects.equals(this.domain, requestAddOrder.domain) &&
        Objects.equals(this.billingcycle, requestAddOrder.billingcycle) &&
        Objects.equals(this.domaintype, requestAddOrder.domaintype) &&
        Objects.equals(this.regperiod, requestAddOrder.regperiod) &&
        Objects.equals(this.eppcode, requestAddOrder.eppcode) &&
        Objects.equals(this.nameserver1, requestAddOrder.nameserver1) &&
        Objects.equals(this.nameserver2, requestAddOrder.nameserver2) &&
        Objects.equals(this.nameserver3, requestAddOrder.nameserver3) &&
        Objects.equals(this.nameserver4, requestAddOrder.nameserver4) &&
        Objects.equals(this.nameserver5, requestAddOrder.nameserver5) &&
        Objects.equals(this.customfields, requestAddOrder.customfields) &&
        Objects.equals(this.configoptions, requestAddOrder.configoptions) &&
        Objects.equals(this.priceoverride, requestAddOrder.priceoverride) &&
        Objects.equals(this.promocode, requestAddOrder.promocode) &&
        Objects.equals(this.promooverride, requestAddOrder.promooverride) &&
        Objects.equals(this.affid, requestAddOrder.affid) &&
        Objects.equals(this.noinvoice, requestAddOrder.noinvoice) &&
        Objects.equals(this.noinvoiceemail, requestAddOrder.noinvoiceemail) &&
        Objects.equals(this.noemail, requestAddOrder.noemail) &&
        Objects.equals(this.addons, requestAddOrder.addons) &&
        Objects.equals(this.hostname, requestAddOrder.hostname) &&
        Objects.equals(this.ns1prefix, requestAddOrder.ns1prefix) &&
        Objects.equals(this.ns2prefix, requestAddOrder.ns2prefix) &&
        Objects.equals(this.rootpw, requestAddOrder.rootpw);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientid, paymentmethod, pid, domain, billingcycle, domaintype, regperiod, eppcode, nameserver1, nameserver2, nameserver3, nameserver4, nameserver5, customfields, configoptions, priceoverride, promocode, promooverride, affid, noinvoice, noinvoiceemail, noemail, addons, hostname, ns1prefix, ns2prefix, rootpw);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestAddOrder {\n");
    
    sb.append("    clientid: ").append(toIndentedString(clientid)).append("\n");
    sb.append("    paymentmethod: ").append(toIndentedString(paymentmethod)).append("\n");
    sb.append("    pid: ").append(toIndentedString(pid)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    billingcycle: ").append(toIndentedString(billingcycle)).append("\n");
    sb.append("    domaintype: ").append(toIndentedString(domaintype)).append("\n");
    sb.append("    regperiod: ").append(toIndentedString(regperiod)).append("\n");
    sb.append("    eppcode: ").append(toIndentedString(eppcode)).append("\n");
    sb.append("    nameserver1: ").append(toIndentedString(nameserver1)).append("\n");
    sb.append("    nameserver2: ").append(toIndentedString(nameserver2)).append("\n");
    sb.append("    nameserver3: ").append(toIndentedString(nameserver3)).append("\n");
    sb.append("    nameserver4: ").append(toIndentedString(nameserver4)).append("\n");
    sb.append("    nameserver5: ").append(toIndentedString(nameserver5)).append("\n");
    sb.append("    customfields: ").append(toIndentedString(customfields)).append("\n");
    sb.append("    configoptions: ").append(toIndentedString(configoptions)).append("\n");
    sb.append("    priceoverride: ").append(toIndentedString(priceoverride)).append("\n");
    sb.append("    promocode: ").append(toIndentedString(promocode)).append("\n");
    sb.append("    promooverride: ").append(toIndentedString(promooverride)).append("\n");
    sb.append("    affid: ").append(toIndentedString(affid)).append("\n");
    sb.append("    noinvoice: ").append(toIndentedString(noinvoice)).append("\n");
    sb.append("    noinvoiceemail: ").append(toIndentedString(noinvoiceemail)).append("\n");
    sb.append("    noemail: ").append(toIndentedString(noemail)).append("\n");
    sb.append("    addons: ").append(toIndentedString(addons)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    ns1prefix: ").append(toIndentedString(ns1prefix)).append("\n");
    sb.append("    ns2prefix: ").append(toIndentedString(ns2prefix)).append("\n");
    sb.append("    rootpw: ").append(toIndentedString(rootpw)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

