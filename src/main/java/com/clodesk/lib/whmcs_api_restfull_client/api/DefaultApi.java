/*
 * WHMCS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.clodesk.lib.whmcs_api_restfull_client.api;

import com.sun.jersey.api.client.GenericType;

import com.clodesk.lib.whmcs_api_restfull_client.invoker.ApiException;
import com.clodesk.lib.whmcs_api_restfull_client.invoker.ApiClient;
import com.clodesk.lib.whmcs_api_restfull_client.invoker.Configuration;
import com.clodesk.lib.whmcs_api_restfull_client.model.*;
import com.clodesk.lib.whmcs_api_restfull_client.invoker.Pair;

import com.clodesk.lib.whmcs_api_restfull_client.model.RequestAcceptOrder;
import com.clodesk.lib.whmcs_api_restfull_client.model.RequestAddOrder;
import com.clodesk.lib.whmcs_api_restfull_client.model.RequestUpdateClientProduct;
import com.clodesk.lib.whmcs_api_restfull_client.model.WhmcsResponseErrorGeneric;
import com.clodesk.lib.whmcs_api_restfull_client.model.WhmcsResponseSuccessAcceptOrder;
import com.clodesk.lib.whmcs_api_restfull_client.model.WhmcsResponseSuccessAddOrder;
import com.clodesk.lib.whmcs_api_restfull_client.model.WhmcsResponseSuccessUpdateClientProduct;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-12T15:17:02.217Z")
public class DefaultApi {
  private ApiClient apiClient;

  public DefaultApi() {
    this(Configuration.getDefaultApiClient());
  }

  public DefaultApi(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  public ApiClient getApiClient() {
    return apiClient;
  }

  public void setApiClient(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  /**
   * Accepts a pending order
   * Accepts a pending order
   * @param apiParameters  (required)
   * @return WhmcsResponseSuccessAcceptOrder
   * @throws ApiException if fails to make API call
   */
  public WhmcsResponseSuccessAcceptOrder acceptOrder(RequestAcceptOrder apiParameters) throws ApiException {
    Object localVarPostBody = apiParameters;
    
    // verify the required parameter 'apiParameters' is set
    if (apiParameters == null) {
      throw new ApiException(400, "Missing the required parameter 'apiParameters' when calling acceptOrder");
    }
    
    // create path and map variables
    String localVarPath = "/AcceptOrder";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    GenericType<WhmcsResponseSuccessAcceptOrder> localVarReturnType = new GenericType<WhmcsResponseSuccessAcceptOrder>() {};
    return apiClient.invokeAPI(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }
  /**
   * Add order
   * Adds an order to a client.
   * @param apiParameters  (required)
   * @return WhmcsResponseSuccessAddOrder
   * @throws ApiException if fails to make API call
   */
  public WhmcsResponseSuccessAddOrder addOrder(RequestAddOrder apiParameters) throws ApiException {
    Object localVarPostBody = apiParameters;
    
    // verify the required parameter 'apiParameters' is set
    if (apiParameters == null) {
      throw new ApiException(400, "Missing the required parameter 'apiParameters' when calling addOrder");
    }
    
    // create path and map variables
    String localVarPath = "/AddOrder";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    GenericType<WhmcsResponseSuccessAddOrder> localVarReturnType = new GenericType<WhmcsResponseSuccessAddOrder>() {};
    return apiClient.invokeAPI(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }
  /**
   * Update client Product
   * Updates a Client Service
   * @param apiParameters  (required)
   * @return WhmcsResponseSuccessUpdateClientProduct
   * @throws ApiException if fails to make API call
   */
  public WhmcsResponseSuccessUpdateClientProduct updateClientProduct(RequestUpdateClientProduct apiParameters) throws ApiException {
    Object localVarPostBody = apiParameters;
    
    // verify the required parameter 'apiParameters' is set
    if (apiParameters == null) {
      throw new ApiException(400, "Missing the required parameter 'apiParameters' when calling updateClientProduct");
    }
    
    // create path and map variables
    String localVarPath = "/UpdateClientProduct";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    GenericType<WhmcsResponseSuccessUpdateClientProduct> localVarReturnType = new GenericType<WhmcsResponseSuccessUpdateClientProduct>() {};
    return apiClient.invokeAPI(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }
}
